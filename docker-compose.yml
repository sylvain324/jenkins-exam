version: '3.7'

services:
  movie_service:
    image: ${DOCKER_HUB_ID}/movie-service:${DOCKER_TAG}
    restart: always
    environment:
      - DATABASE_URI=postgresql://movie_db_username:movie_db_password@movie_db/movie_db_dev
      - CAST_SERVICE_HOST_URL=http://cast_service:8000/api/v1/casts/
    depends_on:
      - movie_db
    healthcheck:
      test: curl http://localhost:8000/ || exit 1
      interval: 1s
      timeout: 2s
      retries: 10

  movie_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_movie:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=movie_db_username
      - POSTGRES_PASSWORD=movie_db_password
      - POSTGRES_DB=movie_db_dev

  cast_service:
    image: ${DOCKER_HUB_ID}/cast-service:${DOCKER_TAG}
    restart: always
    environment:
      - DATABASE_URI=postgresql://cast_db_username:cast_db_password@cast_db/cast_db_dev
    depends_on:
      - cast_db
    healthcheck:
      test: curl http://localhost:8000/ || exit 1
      interval: 1s
      timeout: 2s
      retries: 10

  cast_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_cast:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=cast_db_username
      - POSTGRES_PASSWORD=cast_db_password
      - POSTGRES_DB=cast_db_dev

  nginx:
    image: ${DOCKER_HUB_ID}/proxy:${DOCKER_TAG}
    ports:
      - "8092:8080"
    depends_on:
      - cast_service
      - movie_service
    healthcheck:
      test: curl http://localhost:8080/ || exit 1
      interval: 1s
      timeout: 2s
      retries: 10

volumes:
  postgres_data_movie:
  postgres_data_cast: